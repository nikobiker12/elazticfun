{
  "swagger": "2.0",
  "info": {
    "title": "elazticfun.azurewebsites.net",
    "version": "1.0.0"
  },
  "host": "elazticfun.azurewebsites.net",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/pricing": {
      "post": {
        "operationId": "pricing",
        "description": "Determines the pricing of an option",
        "summary": "Calculates pricing",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The pricing parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "optionType": {
                  "description": "The option type (Call or Put)",
                  "type": "string"
                },
                "payoffName": {
                  "description": "The payoff Name",
                  "type": "string"
                },
                "strike": {
                  "description": "The strike",
                  "type": "number",
                  "format": "double"
                },
                "maturity": {
                  "description": "The maturity",
                  "type": "number",
                  "format": "double"
                },
                "spot": {
                  "description": "The spot",
                  "type": "number",
                  "format": "double"
                },
                "volatility": {
                  "description": "The volatility",
                  "type": "number",
                  "format": "double"
                },
                "simulationCount": {
                  "description": "The simulation count",
                  "type": "integer",
                  "format": "int64"
                },
                "spotBumpCount": {
                  "description": "The spot step count",
                  "type": "integer",
                  "format": "int64"
                },
                "volBumpCount": {
                  "description": "The vol step count",
                  "type": "integer",
                  "format": "int64"
                },
                "spotBumpSize": {
                  "description": "The spot step size",
                  "type": "number",
                  "format": "double"
                },
                "volBumpSize": {
                  "description": "The vol step size",
                  "type": "number",
                  "format": "double"
                }
              },
              "required": [
                "optionType",
                "payoffName",
                "strike",
                "maturity",
                "spot",
                "volatility",
                "simulationCount",
                "spotBumpCount",
                "volBumpCount",
                "spotBumpSize",
                "volBumpSize"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The identifier of the request",
            "schema": {
              "type": "object",
              "properties": {
                "RequestId": {
                  "type": "string",
                  "description": "The GUID of the request"
                }
              }
            }
          },
          "400": {
            "description": "The error reason",
            "schema": {
              "type": "object",
              "properties": {
                "Error": {
                  "type": "string",
                  "description": "The error reason"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/api/pricing/{pricingRequestId}": {
      "get": {
        "operationId": "pricingresults",
        "description": "Get pricing results for a given request",
        "summary": "Get pricing results",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pricingRequestId",
            "in": "path",
            "description": "The pricing request Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the request",
            "schema": {
              "type": "object",
              "properties": {
                "Price": {
                  "type": "number",
                  "format": "double",
                  "description": "The price"
                },
                "Progress": {
                  "type": "number",
                  "format": "double",
                  "description": "The progress"
                },
                "Spot": {
                  "type": "number",
                  "format": "double",
                  "description": "The spot"
                },
                "Volatility": {
                  "type": "number",
                  "format": "double",
                  "description": "The Volatility"
                },
                "ProcessedPathCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The ProcessedPathCount"
                },
                "TotalPathCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The TotalPathCount"
                },
                "RequestId": {
                  "type": "string",
                  "description": "The request id"
                }
              }
            }
          },
          "400": {
            "description": "The error of the request",
            "schema": {
              "type": "object",
              "properties": {
                "Error": {
                  "type": "string",
                  "description": "The error message of the request"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/api/custompayoff": {
      "post": {
        "operationId": "custompayoff",
        "description": "Determines the payoff",
        "summary": "Calculates payoff",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The payoff parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "optionType": {
                  "description": "The option type (Call or Put)",
                  "type": "string"
                },
                "payoffName": {
                  "description": "The payoff Name",
                  "type": "string"
                },
                "strike": {
                  "description": "The strike",
                  "type": "number",
                  "format": "double"
                },
                "paths": {
                  "description": "The vol step size",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "required": [
                "optionType",
                "payoffName",
                "strike",
                "paths"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the request",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "400": {
            "description": "The error reason",
            "schema": {
              "type": "object",
              "properties": {
                "Error": {
                  "type": "string",
                  "description": "The error reason"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "apikeyQuery": {
      "type": "apiKey",
      "name": "code",
      "in": "query"
    }
  }
}